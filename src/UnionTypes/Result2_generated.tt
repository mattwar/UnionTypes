<#@ template compilerOptions="/d:T4" debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="..\Generators\Generator.cs" #>
<#@ include file="..\Generators\UnionGenerator.cs" #>
<#= UnionGenerator.Generate(
    new Union(
        UnionKind.TagUnion,
        "Result",
        "Result<TValue, TError>",
        "public",
        new[]
        {
            new UnionCase(
                name: "Success",
                type: null,
                tagValue: 1,
                factoryName:"Success",
                factoryParameters: new [] { new UnionCaseValue("value", "TValue", TypeKind.TypeParameter_Unconstrained) },
                accessorName: "SuccessValue"),
            new UnionCase(
                name: "Failure",
                type: null,
                tagValue: 2,
                factoryName: "Failure",
                factoryParameters: new [] { new UnionCaseValue("error", "TError", TypeKind.TypeParameter_Unconstrained) },
                accessorName: "FailureValue")
        },
        UnionOptions.Default
            .WithGenerateMatch(true)
            .WithGenerateEquality(true)
            .WithGenerateToString(true)
        ),
    namespaceName: "UnionTypes"
    )
 #>
