<#@ template compilerOptions="/d:T4" debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="..\Generators\Generator.cs" #>
<#@ include file="..\Generators\UnionGenerator.cs" #>
<#= UnionGenerator.Generate(
    new Union(
        UnionKind.TypeUnion,
        "Option",
        "Option<TValue>",
        "public",
        new[]
        {
            new UnionCase(
                name: "Some", 
                tagValue: 1, 
                factoryName: "Some", 
                factoryParameters: new [] { new UnionCaseValue("value", new UnionValueType("TValue", TypeKind.TypeParameter_Unconstrained)) },
                accessorName: "Value"),
            new UnionCase(
                name: "None", 
                type: new UnionValueType("UnionTypes.Toolkit.None", TypeKind.Class, "Singleton"),
                tagValue: 0, 
                factoryName:"None", 
                hasAccessor: false)
        },
        UnionOptions.Default
            .WithUseToolkit(true)
            .WithGenerateMatch(true)
            .WithGenerateEquality(true)
            .WithGenerateToString(true)
        ),
    namespaceName: "UnionTypes.Toolkit"
    )
 #>
